#!/usr/bin/env node

console.log('üîç Verificando configuraci√≥n de Privy...\n');

// Verificar variables de entorno
const privyAppId = process.env.NEXT_PUBLIC_PRIVY_APP_ID;

console.log('üìã Configuraci√≥n actual:');
console.log(`‚Ä¢ NEXT_PUBLIC_PRIVY_APP_ID: ${privyAppId || 'NO CONFIGURADO'}`);

if (!privyAppId) {
  console.log('\n‚ùå PROBLEMA: No hay Privy App ID configurado');
  console.log('\nüîß SOLUCI√ìN:');
  console.log('1. Ve a https://dashboard.privy.io');
  console.log('2. Crea una nueva aplicaci√≥n o usa una existente');
  console.log('3. Copia tu App ID');
  console.log('4. Crea un archivo .env.local en la ra√≠z del proyecto con:');
  console.log('   NEXT_PUBLIC_PRIVY_APP_ID=tu-app-id-real-aqui');
  console.log('\nüìù Ejemplo de .env.local:');
  console.log('NEXT_PUBLIC_PRIVY_APP_ID=clt_abc123def456...');
  console.log('NEXT_PUBLIC_LIFI_API_KEY=tu-lifi-api-key');
  console.log('NEXT_PUBLIC_BACKEND_URL=http://localhost:3001');
} else if (privyAppId === 'your-privy-app-id' || privyAppId === 'your-privy-app-id-here') {
  console.log('\n‚ùå PROBLEMA: Privy App ID es un placeholder');
  console.log('\nüîß SOLUCI√ìN:');
  console.log('1. Ve a https://dashboard.privy.io');
  console.log('2. Crea una nueva aplicaci√≥n o usa una existente');
  console.log('3. Copia tu App ID real');
  console.log('4. Actualiza el archivo .env.local');
} else {
  console.log('\n‚úÖ Privy App ID configurado correctamente');
  console.log('‚Ä¢ ID:', privyAppId);
  
  // Verificar formato b√°sico
  if (privyAppId.startsWith('clt_')) {
    console.log('‚úÖ Formato de ID v√°lido (empieza con clt_)');
  } else {
    console.log('‚ö†Ô∏è  Formato de ID inusual, verifica que sea correcto');
  }
}

console.log('\nüìö Recursos √∫tiles:');
console.log('‚Ä¢ Privy Dashboard: https://dashboard.privy.io');
console.log('‚Ä¢ Privy Docs: https://docs.privy.io');
console.log('‚Ä¢ Demo Page: http://localhost:3000/privy-demo (cuando est√© configurado)'); 